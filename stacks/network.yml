AWSTemplateFormatVersion: 2010-09-09
Description: ---
Resources: 
    PlatoVPC:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: 10.17.0.0/16
            EnableDnsSupport: 'false'
            EnableDnsHostnames: 'false'
            Tags:
              - Key: Name
                Value: PlatoVPC
    PlatoInternetGw:
        Type: AWS::EC2::InternetGateway
        Properties: 
            Tags:
              - Key: Name
                Value: PlatoVPC
    PlatoVPCGatewayAttachment:
         Type: AWS::EC2::VPCGatewayAttachment
         Properties:
            VpcId:
              Ref: PlatoVPC
            InternetGatewayId:
              Ref: PlatoInternetGw
    PlatoPrivateSubNetA:
        Type: AWS::EC2::Subnet
        Properties:
          AvailabilityZone: 
           Fn::Select: 
            - 0
            - Fn::GetAZs: ""
          CidrBlock: 10.17.1.0/24
          VpcId: 
             Ref: PlatoVPC
          Tags:
            - Key: Name
              Value: PlatoPrivateSubNetA
    PlatoPublicSubNetA:
        Type: AWS::EC2::Subnet
        Properties:
          AvailabilityZone:
           Fn::Select: 
            - 0
            - Fn::GetAZs: ""
          CidrBlock: 10.17.11.0/24
          MapPublicIpOnLaunch: true
          VpcId: 
             Ref: PlatoVPC
          Tags:
            - Key: Name
              Value: PlatoPublicSubNetA
    PlatoEIPA:
       Type: 'AWS::EC2::EIP'
       Properties:
          Domain: vpc
    PlatoNatGatewayA:
       Type: 'AWS::EC2::NatGateway'
       Properties:
          AllocationId: !GetAtt PlatoEIPA.AllocationId
          SubnetId: 
            Ref: PlatoPublicSubNetA
    PlatoPrivateSubNetB:
        Type: AWS::EC2::Subnet
        Properties:
          AvailabilityZone:
           Fn::Select: 
            - 1
            - Fn::GetAZs: ""
          CidrBlock: 10.17.2.0/24
          VpcId: 
             Ref: PlatoVPC
          Tags:
            - Key: Name
              Value: PlatoPrivateSubNetB
    PlatoPublicSubNetB:
        Type: AWS::EC2::Subnet
        Properties:
          AvailabilityZone: 
           Fn::Select: 
            - 1
            - Fn::GetAZs: ""
          CidrBlock: 10.17.12.0/24
          MapPublicIpOnLaunch: true
          VpcId: 
             Ref: PlatoVPC
          Tags:
            - Key: Name
              Value: PlatoPublicSubNetB
    PlatoEIPB:
       Type: 'AWS::EC2::EIP'
       Properties:
          Domain: vpc
    PlatoNatGatewayB:
       Type: 'AWS::EC2::NatGateway'
       Properties:
          AllocationId: !GetAtt PlatoEIPB.AllocationId
          SubnetId: 
            Ref: PlatoPublicSubNetB
    PlatoRouteTablePrivateA:
        Type: AWS::EC2::RouteTable
        Properties: 
          VpcId:
            Ref: PlatoVPC
          Tags:
            - Key: Name
              Value: PlatoRouteTablePrivateA
    PlatoRouteTablePublicA:
        Type: AWS::EC2::RouteTable
        Properties: 
          VpcId:
            Ref: PlatoVPC
          Tags:
            - Key: Name
              Value: PlatoRouteTablePublicA
    PlatoRouteTablePrivateB:
        Type: AWS::EC2::RouteTable
        Properties: 
          VpcId:
            Ref: PlatoVPC
          Tags:
            - Key: Name
              Value: PlatoRouteTablePrivateB
    PlatoRouteTablePublicB:
        Type: AWS::EC2::RouteTable
        Properties: 
          VpcId:
            Ref: PlatoVPC
          Tags:
            - Key: Name
              Value: PlatoRouteTablePublicB
    PlatoRouteTableAssocciationPrivateA:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
          SubnetId:
            Ref: PlatoPrivateSubNetA
          RouteTableId:
            Ref: PlatoRouteTablePrivateA
    PlatoRouteTableAssocciationPublicA:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
          SubnetId:
            Ref: PlatoPublicSubNetA
          RouteTableId:
            Ref: PlatoRouteTablePublicA
    PlatoRouteTableAssocciationPrivateB:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
          SubnetId:
            Ref: PlatoPrivateSubNetB
          RouteTableId:
            Ref: PlatoRouteTablePrivateB
    PlatoRouteTableAssocciationPublicB:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
          SubnetId:
            Ref: PlatoPublicSubNetB
          RouteTableId:
            Ref: PlatoRouteTablePublicB
    PlatoRouteTablePrivateNatGwRouteA:
        Type: 'AWS::EC2::Route'
        Properties:
          RouteTableId: 
              Ref: PlatoRouteTablePrivateA
          DestinationCidrBlock: '0.0.0.0/0'
          NatGatewayId: 
              Ref: PlatoNatGatewayA     
    PlatoRouteTablePublicInternetRouteA:
        Type: 'AWS::EC2::Route'
        DependsOn: PlatoVPCGatewayAttachment
        Properties:
          RouteTableId: 
              Ref: PlatoRouteTablePublicA
          DestinationCidrBlock: '0.0.0.0/0'
          GatewayId: 
              Ref: PlatoInternetGw 
    PlatoRouteTablePrivateNatGwRouteB:
        Type: 'AWS::EC2::Route'
        Properties:
          RouteTableId: 
              Ref: PlatoRouteTablePrivateB
          DestinationCidrBlock: '0.0.0.0/0'
          NatGatewayId: 
              Ref: PlatoNatGatewayB
    PlatoRouteTablePublicInternetRouteB:
        Type: 'AWS::EC2::Route'
        DependsOn: PlatoVPCGatewayAttachment
        Properties:
          RouteTableId: 
              Ref: PlatoRouteTablePublicB
          DestinationCidrBlock: '0.0.0.0/0'
          GatewayId: 
              Ref: PlatoInternetGw             
    PlatoNetworkAclPrivate:
        Type: 'AWS::EC2::NetworkAcl'
        Properties:
          VpcId: 
            Ref: PlatoVPC
          Tags:
          - Key: Name
            Value: PlatoNetworkAclPrivate
    PlatoNetworkAclPublic:
        Type: 'AWS::EC2::NetworkAcl'
        Properties:
          VpcId: 
            Ref: PlatoVPC
          Tags:
          - Key: Name
            Value: PlatoNetworkAclPublic
    PlatoSubnetNetworkAclAssociationPrivateA:
        Type: 'AWS::EC2::SubnetNetworkAclAssociation'
        Properties:
          SubnetId: 
            Ref: PlatoPrivateSubNetA
          NetworkAclId: 
            Ref: PlatoNetworkAclPrivate
    PlatoSubnetNetworkAclAssociationPublicA:
        Type: 'AWS::EC2::SubnetNetworkAclAssociation'
        Properties:
          SubnetId: 
            Ref: PlatoPublicSubNetA
          NetworkAclId: 
            Ref: PlatoNetworkAclPublic
    PlatoSubnetNetworkAclAssociationPrivateB:
        Type: 'AWS::EC2::SubnetNetworkAclAssociation'
        Properties:
          SubnetId: 
            Ref: PlatoPrivateSubNetB
          NetworkAclId: 
            Ref: PlatoNetworkAclPrivate
    PlatoSubnetNetworkAclAssociationPublicB:
        Type: 'AWS::EC2::SubnetNetworkAclAssociation'
        Properties:
          SubnetId: 
            Ref: PlatoPublicSubNetB
          NetworkAclId: 
            Ref: PlatoNetworkAclPublic
    PlatoNetworkAclPrivateInAllowVPC:
       Type: 'AWS::EC2::NetworkAclEntry'
       Properties:
          NetworkAclId: 
            Ref: PlatoNetworkAclPrivate
          CidrBlock: '0.0.0.0/0' 
          RuleNumber: 99
          Protocol: -1
          RuleAction: allow
    PlatoNetworkAclPrivateOutAllowVPC:
       Type: 'AWS::EC2::NetworkAclEntry'
       Properties:
          NetworkAclId: 
            Ref: PlatoNetworkAclPrivate
          CidrBlock: '0.0.0.0/0' 
          RuleNumber: 99
          Protocol: -1
          RuleAction: allow
          Egress: true
    PlatoNetworkAclPublicInAllowAll:
       Type: 'AWS::EC2::NetworkAclEntry'
       Properties:
          NetworkAclId: 
            Ref: PlatoNetworkAclPublic
          CidrBlock: '0.0.0.0/0' 
          RuleNumber: 99
          Protocol: -1
          RuleAction: allow
    PlatoNetworkAclPublicOutAllowAll:
       Type: 'AWS::EC2::NetworkAclEntry'
       Properties:
          NetworkAclId: 
            Ref: PlatoNetworkAclPublic
          CidrBlock: '0.0.0.0/0' 
          RuleNumber: 99
          Protocol: -1
          RuleAction: allow
          Egress: true
Outputs:
  StackName:
    Description: 'Stack name.'
    Value: !Sub '${AWS::StackName}'
  AZA:
    Description: 'AZ of A'
    Value: 
       Fn::Select: 
        - 0
        - Fn::GetAZs: ""
    Export:
      Name: !Sub '${AWS::StackName}-AZA'
  AZB:
    Description: 'AZ of B'
    Value:
      Fn::Select: 
        - 1
        - Fn::GetAZs: ""
    Export:
      Name: !Sub '${AWS::StackName}-AZB'
  VPC:
    Description: 'VPC.'
    Value: !Ref PlatoVPC
    Export:
      Name: !Sub '${AWS::StackName}-VPC'
  SubnetsPublic:
    Description: 'Subnets public.'
    Value: 
       Fn::Join: 
        - ',' 
        - - !Ref PlatoPublicSubNetA
          - !Ref PlatoPublicSubNetB
    Export:
      Name: !Sub '${AWS::StackName}-SubnetsPublic'
  SubnetsPrivate:
    Description: 'Subnets public.'
    Value: 
       Fn::Join: 
        - ',' 
        - - !Ref PlatoPrivateSubNetA
          - !Ref PlatoPrivateSubNetB
    Export:
      Name: !Sub '${AWS::StackName}-SubnetsPrivate'